structure Ast = RedPrlAst

%%
%header (functor ExprLrValsFun (structure Token : TOKEN))

%term EOF
   | IDENT of string
   | FUN
   | DFUN
   | LAM
   | AP
   | IFEQ
   | MEMBER
   | NU
   | DISECT
   | CONS
   | AX
   | ATOM
   | SQUASH
   | UNIV
   | BASE
   | DEF
   | TAC
   | THM
   | REC
   | LPAREN
   | RPAREN
   | LBRACKET
   | RCURLY
   | LSQUARE
   | RSQUARE
   | OCTOTHORPE
   | EQUALS
   | COLONLT
   | LTEQUALS
   | AT
   | BAR
   | DOT
   | TILDE
   | APOSTROPHE

%nonterm start of Ast.ast
      |  term  of Ast.ast

%verbose
%pos int
%start start
%eop EOF
%noshift EOF
%name Expr
%%

start : term                                     (term)

term : OCTOTHORPE IDENT LPAREN
     | IDENT                                     (Ast.` IDENT)
